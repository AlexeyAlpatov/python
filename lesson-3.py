#1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def my_func(num1, num2):
    result = num1 / num2 if num2 != 0 else 'Делить на ноль нельзя'
    return result
n = int(input('Введите делимое: '))
m = int(input('Введите делитель: '))
print(my_func(n, m))

#2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

def my_func(name, surname=None, birthday=None, city=None, email=None, phone=None):
    result = f'Name: {name}, Surname: {surname}, Birthday: {birthday}, City: {city}, Email:{email}, Phone: {phone}'
    return result
print(my_func(name='Oleg', surname='Olegovich'))

#3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.

def my_func(num1, num2, num3):
    my_list = [num1, num2, num3]
    my_list.sort(reverse=True)
    result = int(my_list[0]) + int(my_list[1])
    return result
res = my_func(3, 1234, 6)
print(res)

#4. Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить
# возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). При решении задания
# необходимо обойтись без встроенной функции возведения числа в степень.
#Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

def my_func0(x, y):
    result = x ** y
    return result

def my_func1(x, y):
    result = 1 / (x ** abs(y))
    return result

def my_func2(x, y):
    start = x
    for i in range(abs(y)-1):
        x = x * start
    result = 1 / x
    return result

print(my_func0(3, -5))
print(my_func1(3, -5))
print(my_func2(3, -5))

#5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет
# добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее
# сумме и после этого завершить программу.

sum = 0
while True:
    my_str = input('Введите числа через пробел: ')
    my_list = my_str.split(' ')
    if 'q' in my_list:
        my_list.remove('q')
        for i in range(len(my_list)):
            sum = sum + int(my_list[i])
        print(f'Сумма чисел: {sum}')
        break
    else:
        for i in range(len(my_list)):
            sum = sum + int(my_list[i])
        print(f'Сумма чисел: {sum}')

#6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной
# первой буквой. Например, print(int_func(‘text’)) -> Text.
#Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно
# начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().

def int_func(word):
    word = str(word)
    result = word.capitalize()
    return result

my_str = input('Введите предложение: ')
my_list = my_str.split(' ')
for i in range(len(my_list)):
    my_list[i] = int_func(my_list[i])
result = ' '.join(my_list)
print(result)
