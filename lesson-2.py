#1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого э
# лемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя,
# а указать явно, в программе.

my_list = [1, 'string', [1, 2], 1.7, {0, 1}, (4, 5, 6)]
i_max = len(my_list)
for i in range(i_max):
    print(type(my_list[i]))

#2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами
# 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

count_elements = int(input('Введите количество элементов списка: '))
my_list = []
for i in range(count_elements):
    element = input(f'Введите элемент списка под номером {i+1}: ')
    my_list.append(element)
print(my_list)
my_list_change = []
if count_elements % 2 == 0:
    my_list_1 = my_list[::2]
    my_list_2 = my_list[1::2]
    for i in range(len(my_list_1)):
        my_list_change.append(my_list_2[i])
        my_list_change.append(my_list_1[i])
        print(my_list_change)
else:
    last_element = my_list[len(my_list)-1]
    my_list.pop(len(my_list)-1)
    my_list_1 = my_list[::2]
    my_list_2 = my_list[1::2]
    for i in range(len(my_list_1)):
        my_list_change.append(my_list_2[i])
        my_list_change.append(my_list_1[i])
    my_list_change.append(last_element)
    print(my_list_change)

#3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц
# (зима, весна, лето, осень). Напишите решения через list и через dict.

number = int(input('Введите номер месяца: '))
if number <= 12:
    my_list = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь']
    my_month = my_list[number-1]
    print(f'Сейчас месяц - {my_month}')
    winter = ['декабрь', 'январь', 'февраль']
    spring = ['март', 'апрель', 'май']
    summer = ['июнь', 'июль', 'август']
    autumn = ['сентябрь', 'октябрь', 'ноябрь']
    if my_month in winter:
        print('Время года - зима')
    elif my_month in spring:
        print('Время года - весна')
    elif my_month in summer:
        print('Время года - лето')
    elif my_month in autumn:
        print('Время года - осень')
else:
    print('Неверный номер месяца')

number = int(input('Введите номер месяца: '))
if number <= 12:
    my_dict = {1: 'январь', 2: 'февраль', 3: 'март', 4: 'апрель', 5: 'май', 6: 'июнь', 7: 'июль', 8: 'август', 9: 'сентябрь', 10: 'октябрь', 11: 'ноябрь', 12: 'декабрь'}
    my_month = my_dict.get(number)
    my_season = {'декабрь': 'зима', 'январь': 'зима', 'февраль': 'зима', 'март': 'весна', 'апрель': 'весна', 'май': 'весна', 'июнь': 'лето', 'июль': 'лето', 'август': 'лето', 'сентябрь': 'осень', 'октябрь': 'осень', 'ноябрь': 'осень'}
    print(f'Сейчас месяц - {my_month}')
    print(f'Время года - {my_season.get(my_month)}')
else:
    print('Неверный номер месяца')

#4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.

my_string = input('Введите строку: ')
my_list = my_string.split(' ')
for i in range(len(my_list)):
    my_word = my_list[i]
    my_word = my_word[:10:]
    print(f'Слово {i+1}: {my_word}')

#5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. У пользователя
# необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
#Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
#Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
#Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
#Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
#Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

my_list = [7, 5, 3, 3, 2]
new_value = int(input('Введите новый элемент в рейтинг: '))
my_list.append(new_value)
my_list.sort(reverse=True)
print(my_list)

#6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит
# информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения). Структуру нужно сформировать программно,
# т.е. запрашивать все данные у пользователя.
#Пример готовой структуры:
#[
#(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
#]
#Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например название, а значение — список значений-характеристик, например список названий товаров.
#Пример:
#{
#“название”: [“компьютер”, “принтер”, “сканер”],
#“цена”: [20000, 6000, 2000],
#“количество”: [5, 2, 7],
#“ед”: [“шт.”]
#}

answer = input('Ввести информацию о товаре (да/нет): ')
i = 0
my_list = []
while answer == 'да':
    t_name = str(input('Введите название товара: '))
    t_price = int(input('Введите цену товара: '))
    t_number = int(input('Введите количество товара: '))
    t_unit = str(input('Введите единицу измерения товара: '))
    my_dict = {'название': t_name, 'цена': t_price, 'количество': t_number, 'единицы': t_unit}
    i += 1
    my_tuple = (i, my_dict)
    my_list.append(my_tuple)
    answer = input('Ввести информацию о товаре (да/нет): ')
new_dict = {}
list_name = []
list_price = []
list_number = []
list_unit = []
for i in range(len(my_list)):
    my_tuple = my_list[i]
    my_dict = my_tuple[1]
    list_name.append(my_dict.get('название'))
    list_price.append(my_dict.get('цена'))
    list_number.append(my_dict.get('количество'))
    list_unit.append(my_dict.get('единицы'))
new_dict.update({'название': list_name})
new_dict.update({'цена': list_price})
new_dict.update({'количество': list_number})
new_dict.update({'единицы': list_unit})
print(new_dict)
